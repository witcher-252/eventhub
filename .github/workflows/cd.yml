name: cd

on:
  release:
    types: [published]         # Entrega continua: cuando se crea una release
  push:
    branches:
      - main                   # Deploy continuo: cuando se mergea a main

jobs:
  check-ci:
    name: Check CI Status
    runs-on: ubuntu-latest
    outputs:
      ci-passed: ${{ steps.check.outputs.passed }}
    steps:
      - name: Check latest CI status
        id: check
        run: |
          echo "🔍 Checking CI status on 'main' branch..."

          max_attempts=30  # 30 intentos x 10s = 5 minutos
          attempt=0
          conclusion=""

          while [ "$attempt" -lt "$max_attempts" ]; do
            echo "🔁 Attempt $((attempt+1))..."

            conclusion=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
              "https://api.github.com/repos/${{ github.repository }}/actions/workflows/ci.yml/runs?branch=main&per_page=1" \
              | jq -r '.workflow_runs[0].conclusion')

            echo "🔎 CI conclusion: $conclusion"

            if [ "$conclusion" = "success" ]; then
              echo "✅ CI passed - proceeding"
              echo "passed=true" >> $GITHUB_OUTPUT
              exit 0
            elif [ "$conclusion" = "failure" ] || [ "$conclusion" = "cancelled" ]; then
              echo "❌ CI failed - aborting"
              echo "passed=false" >> $GITHUB_OUTPUT
              exit 1
            else
              echo "⏳ CI still in progress, waiting 10s..."
              sleep 10
              attempt=$((attempt+1))
            fi
          done

          echo "❌ CI did not finish in time - aborting"
          echo "passed=false" >> $GITHUB_OUTPUT
          exit 1

  deploy:
    name: Deploy to Render
    runs-on: ubuntu-latest
    needs: check-ci
    if: needs.check-ci.outputs.ci-passed == 'true'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Get the date
        run: echo "date=$(date '+%Y%m%d%H%M%S')" >> $GITHUB_ENV

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/eventhub:latest,${{ secrets.DOCKERHUB_USERNAME }}/eventhub:${{ env.date }}

      - name: Deploy to Render
        run: curl ${{ secrets.RENDER_HOOK }}
